struct User<N, M> {
    u32[N][M] data;
}
struct Response<N, M> {
    u32[N][M] data;
}

def validate_input<N, M>(User<N, M> user, Response<N, M> response) -> bool {
    for u32 j in 0..N{
        for u32 i in 0..M {
            u32 mut mul = 1;
            log("{} {} {}", user.data[j][i], response.data[j][i],  mul * (user.data[j][i] - response.data[j][i]) );
            mul = if user.data[j][i] > response.data[j][i] { mul * (user.data[j][i] - response.data[j][i]) } else {mul * (response.data[j][i] - user.data[j][i])};
            assert(mul == 0);
        }
        log("finshed parameter {}", j);
    }
    return true;
}

def main(private User<3, 4> user, private Response<3, 4> response) -> bool{
    bool isValid = assert(validate_input(user, response));
    return isValid;
}